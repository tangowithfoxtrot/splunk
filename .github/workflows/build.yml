---
name: Build

on:
  push:
    branches-ignore:
      - 'l10n_master'
      - 'gh-pages'
  workflow_dispatch:

jobs:
  build-artifacts:
    name: Build artifacts
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - runtime_identifier: win-x86
          - runtime_identifier: win-x64
          - runtime_identifier: linux-x64
          - runtime_identifier: linux-musl-x64
          - runtime_identifier: linux-arm
          - runtime_identifier: linux-arm64
          - runtime_identifier: osx-x64
          - runtime_identifier: osx.11.0-arm64
          - runtime_identifier: osx.12-arm64
    steps:
      - name: Checkout repo
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846

      - name: Print environment
        run: |
          dotnet --info
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"

      - name: Restore/Clean service
        run: |
          echo "Restore"
          dotnet restore
          echo "Clean"
          dotnet clean -c "Release"

      - name: Build Splunk App
        env:
          APP_OUT: build/bitwarden_event_logs
          BIN_OUT: build/bitwarden_event_logs/bin
          LIB_OUT: build/bitwarden_event_logs/lib/Bitwarden_Splunk
          RUNTIME_IDENTIFIER: ${{ matrix.runtime_identifier }}
        run: |
          # Create directories
          mkdir -p ${BIN_OUT}
          mkdir -p ${LIB_OUT}

          # Copy required files
          cp -R app/bitwarden_event_logs/* ${APP_OUT}
          cp -R src/Splunk/* ${LIB_OUT}

          # Build app
          dotnet publish -c Release -o "${BIN_OUT}" -r "${RUNTIME_IDENTIFIER}"

          # Clean up files
          rm -rf ${LIB_OUT}/bin
          rm -rf ${LIB_OUT}/obj

      - name: Fix inputs config on Windows
        if: ${{ startsWith( matrix.runtime_identifier, 'win') }}
        run: |
          echo "THIS RAN ON WINDOWS!"

      - name: TEST STEP
        run: |
          ls -alh build/bitwarden_event_logs
          echo "**********"
          ls -alh build/bitwarden_event_logs/bin
          echo "**********"
          ls -alh build/bitwarden_event_logs/lib/Bitwarden_Splunk
          echo "**********"

      - name: Upload artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: bitwarden_event_logs_${{ matrix.runtime_identifier }}
          path: build
          if-no-files-found: error
